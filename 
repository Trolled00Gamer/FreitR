[1mdiff --git a/lib/Client/ClientProfile.dart b/lib/Client/ClientProfile.dart[m
[1mindex 83c7746..51846e2 100644[m
[1m--- a/lib/Client/ClientProfile.dart[m
[1m+++ b/lib/Client/ClientProfile.dart[m
[36m@@ -1,7 +1,10 @@[m
 import 'package:flutter/material.dart';[m
[32m+[m[32mimport 'package:uberfreight/user.dart';[m
 [m
 // import 'package:flutter_datetime_picker/flutter_datetime_picker.dart';[m
 [m
[32m+[m[32mUser user = new User();[m
[32m+[m
 final GlobalKey<FormState> _formKey = GlobalKey<FormState>();[m
 [m
 bool isEditable = false;[m
[36m@@ -69,7 +72,7 @@[m [mclass RegistrationForm extends StatefulWidget {[m
 [m
 class _RegistrationFormState extends State<RegistrationForm> {[m
   bool _autoValidate = false;[m
[31m-  String _name;[m
[32m+[m[32m static String _name = user.name;[m
   String _email;[m
   String _mobile;[m
   int _radioValue = 0;[m
[36m@@ -106,12 +109,13 @@[m [mclass _RegistrationFormState extends State<RegistrationForm> {[m
         Container([m
           padding: new EdgeInsets.symmetric(horizontal: 30),[m
           child: new TextFormField([m
[32m+[m[32m            initialValue: user.name,[m
               decoration: const InputDecoration(labelText: 'Name'),[m
               keyboardType: TextInputType.text,[m
               validator: validateName,[m
               enabled: isEditable,[m
               onSaved: (String val) {[m
[31m-                _name = val;[m
[32m+[m[32m                _name = _name;[m
               }),[m
         ),[m
         Container([m
[1mdiff --git a/lib/Driver/DriverDashboard.dart b/lib/Driver/DriverDashboard.dart[m
[1mindex 55cbdd1..321ff2a 100644[m
[1m--- a/lib/Driver/DriverDashboard.dart[m
[1m+++ b/lib/Driver/DriverDashboard.dart[m
[36m@@ -1,4 +1,8 @@[m
 import 'package:flutter/material.dart';[m
[32m+[m[32mimport 'package:uberfreight/Client/ClientProfile.dart';[m
[32m+[m[32mimport 'package:uberfreight/user.dart';[m
[32m+[m[32mimport 'package:provider/provider.dart';[m
[32m+[m[32mimport 'package:uberfreight/auth.dart';[m
 [m
 class DriverDashboard extends StatelessWidget {[m
   static bool jobStatus = false;[m
[36m@@ -6,6 +10,9 @@[m [mclass DriverDashboard extends StatelessWidget {[m
   static bool _isJobsButtonActive = false;[m
   static bool _isListButtonActive = false;[m
   static bool _isProfileButtonActive = false;[m
[32m+[m[32m  // final displayname = name;[m
[32m+[m
[32m+[m[32m  User user = new User();[m
 [m
   @override[m
   Widget build(BuildContext context) {[m
[36m@@ -15,112 +22,116 @@[m [mclass DriverDashboard extends StatelessWidget {[m
         fontStyle: Theme.of(context).textTheme.button.fontStyle,[m
         fontWeight: Theme.of(context).textTheme.button.fontWeight,[m
         fontFamily: Theme.of(context).textTheme.button.fontFamily);[m
[31m-    return Scaffold([m
[31m-      backgroundColor: Theme.of(context).backgroundColor,[m
[31m-      body: jobStatus[m
[31m-          ? Center([m
[31m-              child: Image.network([m
[31m-                'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTQxLYY-Q1ehQQNBN96s13uH4EfE6NXarGPlWJQX3Zv6LpZFYkM',[m
[31m-                fit: BoxFit.cover,[m
[31m-              ),[m
[31m-            )[m
[31m-          : Center([m
[31m-              child: Container([m
[31m-                child: Column([m
[31m-                  mainAxisAlignment: MainAxisAlignment.center,[m
[31m-                  children: <Widget>[[m
[31m-                    Text('The Map will appear once you a job'),[m
[31m-                    FlatButton([m
[31m-                      color: Theme.of(context).primaryColor,[m
[31m-                      onPressed: () {[m
[31m-                        Navigator.of(context).pushNamed('/driverjobsearch');[m
[31m-                      },[m
[31m-                      child: Text([m
[31m-                        'Browse Jobs',[m
[31m-                        style: _buttonTextStyle,[m
[32m+[m[32m    return StreamProvider<User>.value([m
[32m+[m[32m      value: AuthService().user,[m
[32m+[m[32m      child: Scaffold([m
[32m+[m[32m        backgroundColor: Theme.of(context).backgroundColor,[m
[32m+[m[32m        body: jobStatus[m
[32m+[m[32m            ? Center([m
[32m+[m[32m                child: Image.network([m
[32m+[m[32m                  'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTQxLYY-Q1ehQQNBN96s13uH4EfE6NXarGPlWJQX3Zv6LpZFYkM',[m
[32m+[m[32m                  fit: BoxFit.cover,[m
[32m+[m[32m                ),[m
[32m+[m[32m              )[m
[32m+[m[32m            : Center([m
[32m+[m[32m                child: Container([m
[32m+[m[32m                  child: Column([m
[32m+[m[32m                    mainAxisAlignment: MainAxisAlignment.center,[m
[32m+[m[32m                    children: <Widget>[[m
[32m+[m[32m                      Text('The Map will appear once you a job' + user.name),[m
[32m+[m[32m                      FlatButton([m
[32m+[m[32m                        color: Theme.of(context).primaryColor,[m
[32m+[m[32m                        onPressed: () {[m
[32m+[m[32m                          user.returnName();[m
[32m+[m[32m                          Navigator.of(context).pushNamed('/driverjobsearch');[m
[32m+[m[32m                        },[m
[32m+[m[32m                        child: Text([m
[32m+[m[32m                          'Browse Jobs',[m
[32m+[m[32m                          style: _buttonTextStyle,[m
[32m+[m[32m                        ),[m
                       ),[m
[31m-                    ),[m
[31m-                  ],[m
[32m+[m[32m                    ],[m
[32m+[m[32m                  ),[m
                 ),[m
               ),[m
[31m-            ),[m
[31m-      floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,[m
[31m-      floatingActionButton: FloatingActionButton([m
[31m-        onPressed: () {[m
[31m-          Navigator.of(context).pushNamed('/driverjobsearch');[m
[31m-        },[m
[31m-        child: Icon(Icons.search),[m
[31m-        backgroundColor: Colors.black,[m
[31m-      ),[m
[31m-      bottomNavigationBar: new BottomAppBar([m
[31m-        elevation: 8,[m
[31m-        shape: CircularNotchedRectangle(),[m
[31m-        child: Row([m
[31m-          mainAxisAlignment: MainAxisAlignment.spaceEvenly,[m
[31m-          children: <Widget>[[m
[31m-            Container([m
[31m-                child:[m
[31m-                    Column(mainAxisSize: MainAxisSize.min, children: <Widget>[[m
[31m-              IconButton([m
[31m-                icon: Icon(Icons.location_on, color: Colors.black87),[m
[31m-                onPressed: () {},[m
[31m-              ),[m
[31m-              // Text("Map"),[m
[31m-            ])),[m
[31m-            Container([m
[31m-              padding: new EdgeInsets.only(left: 30, right: 50),[m
[31m-              child: Column([m
[31m-                  mainAxisSize: MainAxisSize.min,[m
[31m-                  crossAxisAlignment: CrossAxisAlignment.center,[m
[31m-                  children: <Widget>[[m
[31m-                    IconButton([m
[31m-                      icon: Icon([m
[31m-                        Icons.work,[m
[31m-                        color: Colors.grey[500],[m
[32m+[m[32m        floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,[m
[32m+[m[32m        floatingActionButton: FloatingActionButton([m
[32m+[m[32m          onPressed: () {[m
[32m+[m[32m            Navigator.of(context).pushNamed('/driverjobsearch');[m
[32m+[m[32m          },[m
[32m+[m[32m          child: Icon(Icons.search),[m
[32m+[m[32m          backgroundColor: Colors.black,[m
[32m+[m[32m        ),[m
[32m+[m[32m        bottomNavigationBar: new BottomAppBar([m
[32m+[m[32m          elevation: 8,[m
[32m+[m[32m          shape: CircularNotchedRectangle(),[m
[32m+[m[32m          child: Row([m
[32m+[m[32m            mainAxisAlignment: MainAxisAlignment.spaceEvenly,[m
[32m+[m[32m            children: <Widget>[[m
[32m+[m[32m              Container([m
[32m+[m[32m                  child:[m
[32m+[m[32m                      Column(mainAxisSize: MainAxisSize.min, children: <Widget>[[m
[32m+[m[32m                IconButton([m
[32m+[m[32m                  icon: Icon(Icons.location_on, color: Colors.black87),[m
[32m+[m[32m                  onPressed: () {},[m
[32m+[m[32m                ),[m
[32m+[m[32m                // Text("Map"),[m
[32m+[m[32m              ])),[m
[32m+[m[32m              Container([m
[32m+[m[32m                padding: new EdgeInsets.only(left: 30, right: 50),[m
[32m+[m[32m                child: Column([m
[32m+[m[32m                    mainAxisSize: MainAxisSize.min,[m
[32m+[m[32m                    crossAxisAlignment: CrossAxisAlignment.center,[m
[32m+[m[32m                    children: <Widget>[[m
[32m+[m[32m                      IconButton([m
[32m+[m[32m                        icon: Icon([m
[32m+[m[32m                          Icons.work,[m
[32m+[m[32m                          color: Colors.grey[500],[m
[32m+[m[32m                        ),[m
[32m+[m[32m                        onPressed: () {[m
[32m+[m[32m                          Navigator.of(context).pushNamed('/clientjobpage');[m
[32m+[m[32m                        },[m
                       ),[m
[31m-                      onPressed: () {[m
[31m-                        Navigator.of(context).pushNamed('/clientjobpage');[m
[31m-                      },[m
[31m-                    ),[m
[31m-                    // Text("Jobs"),[m
[31m-                  ]),[m
[31m-            ),[m
[31m-            Container([m
[31m-              padding: new EdgeInsets.only(left: 50, right: 30),[m
[31m-              child: Column([m
[31m-                  mainAxisSize: MainAxisSize.min,[m
[31m-                  crossAxisAlignment: CrossAxisAlignment.center,[m
[31m-                  children: <Widget>[[m
[31m-                    IconButton([m
[31m-                      icon: Icon([m
[31m-                        Icons.format_list_bulleted,[m
[31m-                        color: Colors.grey[500],[m
[32m+[m[32m                      // Text("Jobs"),[m
[32m+[m[32m                    ]),[m
[32m+[m[32m              ),[m
[32m+[m[32m              Container([m
[32m+[m[32m                padding: new EdgeInsets.only(left: 50, right: 30),[m
[32m+[m[32m                child: Column([m
[32m+[m[32m                    mainAxisSize: MainAxisSize.min,[m
[32m+[m[32m                    crossAxisAlignment: CrossAxisAlignment.center,[m
[32m+[m[32m                    children: <Widget>[[m
[32m+[m[32m                      IconButton([m
[32m+[m[32m                        icon: Icon([m
[32m+[m[32m                          Icons.format_list_bulleted,[m
[32m+[m[32m                          color: Colors.grey[500],[m
[32m+[m[32m                        ),[m
[32m+[m[32m                        onPressed: () {[m
[32m+[m[32m                          Navigator.of(context).pushNamed('/clientjobhistory');[m
[32m+[m[32m                        },[m
                       ),[m
[31m-                      onPressed: () {[m
[31m-                        Navigator.of(context).pushNamed('/clientjobhistory');[m
[31m-                      },[m
[31m-                    ),[m
[31m-                    // Text("History"),[m
[31m-                  ]),[m
[31m-            ),[m
[31m-            Container([m
[31m-              child: Column([m
[31m-                  mainAxisSize: MainAxisSize.min,[m
[31m-                  crossAxisAlignment: CrossAxisAlignment.center,[m
[31m-                  children: <Widget>[[m
[31m-                    IconButton([m
[31m-                      icon: Icon([m
[31m-                        Icons.person,[m
[31m-                        color: Colors.grey[500],[m
[32m+[m[32m                      // Text("History"),[m
[32m+[m[32m                    ]),[m
[32m+[m[32m              ),[m
[32m+[m[32m              Container([m
[32m+[m[32m                child: Column([m
[32m+[m[32m                    mainAxisSize: MainAxisSize.min,[m
[32m+[m[32m                    crossAxisAlignment: CrossAxisAlignment.center,[m
[32m+[m[32m                    children: <Widget>[[m
[32m+[m[32m                      IconButton([m
[32m+[m[32m                        icon: Icon([m
[32m+[m[32m                          Icons.person,[m
[32m+[m[32m                          color: Colors.grey[500],[m
[32m+[m[32m                        ),[m
[32m+[m[32m                        onPressed: () {[m
[32m+[m[32m                          Navigator.of(context).pushNamed('/clientprofile');[m
[32m+[m[32m                        },[m
                       ),[m
[31m-                      onPressed: () {[m
[31m-                        Navigator.of(context).pushNamed('/clientprofile');[m
[31m-                      },[m
[31m-                    ),[m
[31m-                    // Text("Profile"),[m
[31m-                  ]),[m
[31m-            ),[m
[31m-          ],[m
[32m+[m[32m                      // Text("Profile"),[m
[32m+[m[32m                    ]),[m
[32m+[m[32m              ),[m
[32m+[m[32m            ],[m
[32m+[m[32m          ),[m
         ),[m
       ),[m
     );[m
[1mdiff --git a/lib/Driver/DriverLogin.dart b/lib/Driver/DriverLogin.dart[m
[1mindex ea27e12..637f2c5 100644[m
[1m--- a/lib/Driver/DriverLogin.dart[m
[1m+++ b/lib/Driver/DriverLogin.dart[m
[36m@@ -15,6 +15,8 @@[m [mclass DriverSignIn extends StatelessWidget {[m
     //   }[m
     // }[m
 [m
[32m+[m[32m    AuthService authService = new AuthService();[m
[32m+[m
     return Scaffold([m
       body: Center([m
         child: Column([m
[36m@@ -69,7 +71,7 @@[m [mclass DriverSignIn extends StatelessWidget {[m
                 elevation: 0,[m
                 color: Colors.black,[m
                 onPressed: () {[m
[31m-                  signInWithGoogle();[m
[32m+[m[32m                  authService.signInWithGoogle();[m
                   Navigator.of(context).pushNamed('/driverdashboard');[m
                 },[m
                 child: Text([m
[1mdiff --git a/lib/auth.dart b/lib/auth.dart[m
[1mindex 30a2e0b..aeb7732 100644[m
[1m--- a/lib/auth.dart[m
[1m+++ b/lib/auth.dart[m
[36m@@ -1,33 +1,78 @@[m
 import 'package:google_sign_in/google_sign_in.dart';[m
 import 'package:firebase_auth/firebase_auth.dart';[m
[32m+[m[32mimport 'package:uberfreight/user.dart';[m
 [m
 final FirebaseAuth _auth = FirebaseAuth.instance;[m
 final GoogleSignIn googleSignIn = GoogleSignIn();[m
 [m
[31m-Future<String> signInWithGoogle() async {[m
[31m-  try {[m
[31m-    final GoogleSignInAccount googleSignInAccount = await googleSignIn.signIn();[m
[31m-    final GoogleSignInAuthentication googleSignInAuthentication =[m
[31m-        await googleSignInAccount.authentication;[m
[31m-[m
[31m-    final AuthCredential credential = GoogleAuthProvider.getCredential([m
[31m-      accessToken: googleSignInAuthentication.accessToken,[m
[31m-      idToken: googleSignInAuthentication.idToken,[m
[31m-    );[m
[31m-[m
[31m-    final AuthResult authResult = await _auth.signInWithCredential(credential);[m
[31m-    final FirebaseUser user = authResult.user;[m
[31m-[m
[31m-    assert(!user.isAnonymous);[m
[31m-    assert(await user.getIdToken() != null);[m
[31m-[m
[31m-    final FirebaseUser currentUser = await _auth.currentUser();[m
[31m-    assert(user.uid == currentUser.uid);[m
[31m-    if (user == null) print('not signed in');[m
[31m-    else print('signed in' + user.uid);[m
[31m-    return 'signInWithGoogle succeeded: $user';[m
[31m-  } catch (error) {[m
[31m-    print(error);[m
[32m+[m[32mString name;[m
[32m+[m[32mString email;[m
[32m+[m[32mString uid;[m
[32m+[m[32mString phoneNumber;[m
[32m+[m[32mString photoUrl;[m
[32m+[m
[32m+[m[32mclass AuthService {[m
[32m+[m[32m  Future signInWithGoogle() async {[m
[32m+[m[32m    try {[m
[32m+[m[32m      final GoogleSignInAccount googleSignInAccount =[m
[32m+[m[32m          await googleSignIn.signIn();[m
[32m+[m[32m      final GoogleSignInAuthentication googleSignInAuthentication =[m
[32m+[m[32m          await googleSignInAccount.authentication;[m
[32m+[m
[32m+[m[32m      final AuthCredential credential = GoogleAuthProvider.getCredential([m
[32m+[m[32m        accessToken: googleSignInAuthentication.accessToken,[m
[32m+[m[32m        idToken: googleSignInAuthentication.idToken,[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      final AuthResult authResult =[m
[32m+[m[32m          await _auth.signInWithCredential(credential);[m
[32m+[m[32m      final FirebaseUser user = authResult.user;[m
[32m+[m
[32m+[m[32m      assert(!user.isAnonymous);[m
[32m+[m[32m      assert(await user.getIdToken() != null);[m
[32m+[m
[32m+[m[32m      final FirebaseUser currentUser = await _auth.currentUser();[m
[32m+[m[32m      assert(user.uid == currentUser.uid);[m
[32m+[m[32m      if (user == null)[m
[32m+[m[32m        print('not signed in');[m
[32m+[m[32m      else[m
[32m+[m[32m        print('signed in' +[m
[32m+[m[32m            user.uid +[m
[32m+[m[32m            user.displayName +[m
[32m+[m[32m            user.email +[m
[32m+[m[32m            user.photoUrl);[m
[32m+[m
[32m+[m[32m      uid = user.uid;[m
[32m+[m[32m      name = user.displayName;[m
[32m+[m[32m      email = user.email;[m
[32m+[m[32m      phoneNumber = user.phoneNumber;[m
[32m+[m[32m      photoUrl = user.photoUrl;[m
[32m+[m
[32m+[m[32m      return _firebaseUser(user);[m
[32m+[m
[32m+[m[32m      // return User(user.uid, user.displayName, user.email, user.phoneNumber,[m
[32m+[m[32m      //         user.photoUrl)[m
[32m+[m[32m      //     .toString();[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      print(error);[m
[32m+[m[32m    }[m
[32m+[m[32m    return null;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  Stream<User> get user {[m
[32m+[m[32m    print('streamer running');[m
[32m+[m[32m    return _auth.onAuthStateChanged.map(_firebaseUser);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  User _firebaseUser(FirebaseUser user) {[m
[32m+[m[32m    user != null ? print('user is not null') : print('user is null');[m
[32m+[m[32m    return user != null[m
[32m+[m[32m        ? User([m
[32m+[m[32m            uid: user.uid,[m
[32m+[m[32m            phoneNumber: user.phoneNumber,[m
[32m+[m[32m            email: user.email,[m
[32m+[m[32m            name: user.displayName,[m
[32m+[m[32m            photoUrl: user.photoUrl)[m
[32m+[m[32m        : null;[m
   }[m
[31m-  return null;[m
 }[m
[1mdiff --git a/lib/webapp/WebSignIn.dart b/lib/webapp/WebSignIn.dart[m
[1mindex c126071..733e2f2 100644[m
[1m--- a/lib/webapp/WebSignIn.dart[m
[1m+++ b/lib/webapp/WebSignIn.dart[m
[36m@@ -41,8 +41,7 @@[m [mclass _SignIn extends StatelessWidget {[m
               mainAxisAlignment: MainAxisAlignment.spaceAround,[m
               children: <Widget>[[m
                 Text([m
[31m-                  'Driver' + "→",[m
[31m-                  textAlign: TextAlign.end,[m
[32m+[m[32m                  'Driver',[m
                   style: new TextStyle([m
                       color: Colors.white,[m
                       fontSize:[m
[1mdiff --git a/pubspec.yaml b/pubspec.yaml[m
[1mindex 7ea1a11..ef3ac59 100644[m
[1m--- a/pubspec.yaml[m
[1m+++ b/pubspec.yaml[m
[36m@@ -25,6 +25,7 @@[m [mdependencies:[m
 #  firebase: ^7.2.1[m
   firebase_core: ^0.4.4+3[m
   cloud_firestore: ^0.13.4+2[m
[32m+[m[32m  provider: ^4.0.4[m
 [m
 [m
   # The following adds the Cupertino Icons font to your application.[m
